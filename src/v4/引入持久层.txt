
把基于JDBC的OR映射工作交由第三方组件完成，Data Accessor中的繁琐编码工作得到了简化，与此同时，伴随持久层框架而来的辅助工具也大大减少了Domain Class的编码负担。


使用持久层框架的好处：
1，减少乏味的代码
比如获取数据库连接、执行SQL语句、关闭数据库连接这些重复的而又没有创造性的编码。
持久层框架还封装了数据库持久层的大多数技术细节，比如事务管理、数据库连接管理、SQL生成等等。

2，更加面向对象的设计
ORM未提供设计提供了更加自然的实现方式，将系统中的Domain Object自动映射到各个数据库表，
从而编码中只需关心Object的相关属性，而无需再纠缠于JDBC ResultSet中的字段型数据。

3，更好的性能
持久层框架大多提供了优秀的性能优化机制，如内置的数据库连接池支持、PreparedStatement缓存、数据缓存等。
这些优化机制的综合使用大大提升了系统性能，并且它对于上层架构完全透明，无需关心其中复杂的实现细节即可得到性能提升。

4，更好的移植性
成熟的持久层框架会提供对不同数据库的良好支持，只需简单地修改其配置参数，即可实现底层数据库的切换。
